step "Tear down #{db} from testing"

packages = nil

hosts.each do |host|

  next unless host['roles'].include?('master')

  case db
  when 'mysql'
    case host['platform']
    when /debian|ubuntu/
      packages = 'mysql-client mysql-server' unless host.is_pe?
      service = 'mysql'
    when /el/
      packages = 'mysql mysql-server' unless host.is_pe?
      service = 'mysqld'
    when /sles/
      packages = 'mysql' unless host.is_pe?
      service = 'mysql'
    end

  when 'sqlite3'
    packages = 'sqlite3 libsqlite3-dev'

  when 'postgresql'
    packages = 'postgresql postgresql-server-dev-8.4'

  end

  case host['platform']
  when /debian|ubuntu/
    remove_cmd = "apt-get purge -y #{packages}"
  when /el/
    remove_cmd = "yum remove -y #{packages}"
  when /sles/
    remove_cmd = "zypper remove -y #{packages}"
  end

  unless host.is_pe? && db == 'mysql'
    on host, remove_cmd
    on host, "service #{service} stop",
      :acceptable_exit_codes => [0, 1] if service
  else
    on host, %q{mysql -u root -p'puppet' -e "drop database storedconfigs;"}
  end

  on host, %Q!cat > #{host['puppet_conf_path']} <<EOF
#{host['original_puppet_conf']}
EOF
!

  rake = if host.is_pe?
           '/opt/puppet/bin/rake'
         else
           'rake'
         end

  tasks = [ 'nodegroup:delclass name=default class=storeconfigs' ]

  tasks.each do |task|
    on host, "#{rake} #{task}"
  end

  on host, 'rm -rf /etc/puppetlabs/puppet/modules/storeconfigs'

end
